[  
   {  
      "name":"Lagoon",
      "methods":[  
         {"returns":"Environment", "implemented_by":[{"types":["holder"], "on_pointer":1, "attribute":"env"}]},
		 {"name":"GetContent", "returns":"([]byte, error)"}
      ]
   },{  
      "name":"Version",
      "methods":[  
         {"name":"Major", "returns":"int", "implemented_by":[{"types":["version"], "attribute":"major"}]},
         {"name":"Minor", "returns":"int", "implemented_by":[{"types":["version"],"attribute":"minor"}]},
         {"name":"Micro", "returns":"int", "implemented_by":[{"types":["version"],"attribute":"micro"}]},
         {"name":"AsString", "implemented_by":[{"types":["version"],"attribute":"full"}]}
      ]
   },{  
      "name":"Environment",
      "inherited":["Labeled"],
      "methods":[  
         {"name":"GetVersion", "returns":"(Version, error)","implemented_by":[{"types":["environmentDef"],"impl":"return CreateVersion(e.Version)"}]},
         {"name":"GetName","implemented_by":[{"types":["environmentDef"],"attribute":"Name"}]},
         {"name":"GetDescription","implemented_by":[{"types":["environmentDef"],"attribute":"Description"}]},
         {"name":"GetBaseLocation","implemented_by":[{"types":["environmentDef"],"attribute":"BaseLocation"}]},
         {"returns":"LagoonPlatform","implemented_by":[{"types":["environmentDef"],"attribute":"Lagoon"}]},
         {"returns":"ProviderDescriptions","implemented_by":[{"types":["environmentDef"],"attribute":"providers"}]},
         {"name":"CountProviders", "returns":"int","implemented_by":[{"types":["environmentDef"],"impl":"return len(e.Providers)"}]},
         {"name":"HasProviders", "returns":"bool","implemented_by":[{"types":["environmentDef"],"impl":"return len(e.Providers) > 0"}]},
         {"returns":"NodeDescriptions","implemented_by":[{"types":["environmentDef"],"attribute":"nodes"}]},
         {"name":"CountNodes", "returns":"int","implemented_by":[{"types":["environmentDef"],"impl":"return len(e.Nodes)"}]},
         {"name":"HasNodes","returns":"bool","implemented_by":[{ "types":["environmentDef"],"impl":"return len(e.Nodes) > 0"}]},
         {"returns":"StackDescriptions","implemented_by":[{"types":["environmentDef"],"attribute":"stacks"}]},
         {"name":"CountStacks","returns":"int","implemented_by":[{"types":["environmentDef"],"impl":"return len(e.Stacks)"}]},
         {"name":"HasStacks","returns":"bool","implemented_by":[{"types":["environmentDef"],"impl":"return len(e.Stacks) > 0"}]},
         {"returns":"TaskDescriptions","implemented_by":[{"types":["environmentDef"],"attribute":"tasks"}]},
         {"name":"CountTasks", "returns":"int","implemented_by":[{"types":["environmentDef"],"impl":"return len(e.Tasks)"}]},
         {"name":"HasTasks", "returns":"bool","implemented_by":[{"types":["environmentDef"],"impl":"return len(e.Tasks) > 0"}]}
      ]
   },
   {  
      "name":"LagoonPlatform",
      "methods":[  
         {"name":"GetVersion","implemented_by":[{"types":["platformDef"],"attribute":"Version"}]},
         {"name":"GetRegistry","implemented_by":[{"types":["platformDef"],"attribute":"Registry"}]},
         {"returns":"Proxy","implemented_by":[{"types":["platformDef"]}]}
      ]
   },
   {  
      "name":"Proxy",
      "methods":[  
         {"name":"GetHttp","implemented_by":[{"types":["platformDef"],"invoker_attribute":".Proxy","attribute":"Http"}]},
         {"name":"GetHttps","implemented_by":[{"types":["platformDef"],"invoker_attribute":".Proxy","attribute":"Https"}]},
         {"name":"GetNoProxy","implemented_by":[{"types":["platformDef"],"invoker_attribute":".Proxy","attribute":"NoProxy"}]}
      ]
   },
   {  
      "name":"Labeled",
      "methods":[  
         {  
            "returns":"Labels",
            "implemented_by":[  
               {"types":["providerDef","nodeSetDef","stackDef","taskDef","environmentDef"],"impl":"return CreateLabels(e.labelsDef.Labels...)"}
            ]
         }
      ]
   },
   {  
      "name":"Labels",
      "methods":[  
         {"name":"Contains", "parameters":"...string","returns":"bool"},
         {"name":"AsStrings","returns":"[]string"}
      ]
   },
   {  
      "name":"Parameterized",
      "methods":[  
         {  
            "returns":"Parameters",
            "implemented_by":[
				{"types":["providerDef"],"impl":"return CreateParameters(e.paramsDef.Params)"},
				{"types":["nodeSetDef"],"impl":"return CreateParameters(e.Provider.paramsDef.Params)"}
            ]
         }
      ]
   },
   {  
      "name":"Parameters",
      "methods":[  
         {"name":"AsMap","returns":"map[string]string"}
      ]
   },
   {  
      "name":"NodeDescriptions",
      "inherited":["MappedContent"],
      "methods":[  
         {"name":"GetNode","returns":"(NodeDescription, bool)","parameters":"string"},
		 {"name":"GetNodesByLabel","returns":"([]NodeDescription)","parameters":"string"}
      ]
   },
   {  
      "name":"NodeDescription",
      "inherited":["Labeled","Named"],
      "methods":[  
         {"name":"GetInstances","returns":"int", "implemented_by":[{"types":["nodeSetDef"],"attribute":"Instances"}]},
         {"name":"GetNodeProvider","returns":"ProviderName", "implemented_by":[{"types":["nodeSetDef"]}]},
         {  
            "name":"GetProviderDescription","returns":"(ProviderDescription, bool)",
            "implemented_by":[{"types":["nodeSetDef"],"impl":"return e.desc.providers.GetProvider(e.Provider.Name)"}]
         }
      ]
   },
   {  
      "name":"ProviderDescriptions",
      "inherited":["MappedContent"],
      "methods":[  
         {"name":"GetProvider","returns":"(ProviderDescription, bool)","parameters":"string"}
      ]
   },
   {  
      "name":"ProviderDescription",
      "inherited":["Labeled","Parameterized","Named"]
   },
   {  
      "name":"StackDescriptions",
      "inherited":["MappedContent"],
      "methods":[  
         {"name":"GetStack","returns":"(StackDescription, bool)","parameters":"string"}
      ]
   },
   {  
      "name":"StackDescription",
      "inherited":["Labeled","Named"],
      "methods":[  
         {"name":"GetRepository","implemented_by":[{"types":[ "stackDef"],"attribute":"Repository"}]},
         {"name":"GetVersion","implemented_by":[{"types":["stackDef"],"attribute":"Version"}]}
      ]
   },
   {  
      "name":"TaskDescriptions",
      "inherited":["MappedContent"],
      "methods":[  
         {"name":"GetTask","returns":"(TaskDescription, bool)","parameters":"string"}
      ]
   },
   {  
      "name":"TaskDescription",
      "inherited":["Labeled","Named"],
      "methods":[  
         {"name":"GetPlaybook","implemented_by":[{"types":["taskDef"],"attribute":"Task"}]},
         {"name":"GetCron","implemented_by":[{"types":["taskDef"],"attribute":"Cron"}]}
      ]
   },
   {  
      "name":"ProviderName",
      "inherited":["Parameterized"],
      "methods":[  
         {"name":"GetProviderName","implemented_by":[{"types":["nodeSetDef"],"invoker_attribute":".Provider","attribute":"Name"}]}
      ]
   },
   {  
      "name":"MappedContent",
      "methods":[  
         {  
            "name":"Count","returns":"int",
            "implemented_by":[{"types":["stacks","tasks","providers","nodes"],"impl":"return len(e.values)"}]
         },
         {  
            "name":"Contains", "parameters":"...string","returns":"bool",
            "implemented_by":[{"types":["stacks","tasks","providers","nodes"],"impl":"return mapMultipleContains(e.values, p)"}]
         }
      ]
   },
   {  
      "name":"Named",
      "methods":[  
         {  
            "name":"GetName",
            "implemented_by":[{"types":[ "providerDef","nodeSetDef","stackDef","taskDef"],"attribute":"name"}]
         }
      ]
   }
]