package engine

//*****************************************************************************
//
// This file is autogenerated by "go generate .". Do not modify.
//
//*****************************************************************************


// ----------------------------------------------------
// Interface Lagoon
// ----------------------------------------------------
type Lagoon interface {
	
	
	GetEnvironment() Environment
	GetContent() ([]byte, error)	
}
// ----------------------------------------------------
// Implementation of Interface "Lagoon"
// ----------------------------------------------------
func (e *holder) GetEnvironment() Environment{
	return e.env
}	




// ----------------------------------------------------
// Interface Version
// ----------------------------------------------------
type Version interface {
	
	
	Major() int
	Minor() int
	Micro() int
	AsString() string	
}
// ----------------------------------------------------
// Implementation of Interface "Version"
// ----------------------------------------------------
func (e version) Major() int{
	return e.major
}	

func (e version) Minor() int{
	return e.minor
}	

func (e version) Micro() int{
	return e.micro
}	

func (e version) AsString() string{
	return e.full
}	




// ----------------------------------------------------
// Interface Environment
// ----------------------------------------------------
type Environment interface {
	// Inherited interface(s)
	Labeled
	
	GetVersion() (Version, error)
	GetName() string
	GetDescription() string
	GetBaseLocation() string
	GetLagoonPlatform() LagoonPlatform
	GetProviderDescriptions() ProviderDescriptions
	CountProviders() int
	HasProviders() bool
	GetNodeDescriptions() NodeDescriptions
	CountNodes() int
	HasNodes() bool
	GetStackDescriptions() StackDescriptions
	CountStacks() int
	HasStacks() bool
	GetTaskDescriptions() TaskDescriptions
	CountTasks() int
	HasTasks() bool	
}
// ----------------------------------------------------
// Implementation of Interface "Environment"
// ----------------------------------------------------
func (e environmentDef) GetVersion() (Version, error){
	return CreateVersion(e.Version)
}	

func (e environmentDef) GetName() string{
	return e.Name
}	

func (e environmentDef) GetDescription() string{
	return e.Description
}	

func (e environmentDef) GetBaseLocation() string{
	return e.BaseLocation
}	

func (e environmentDef) GetLagoonPlatform() LagoonPlatform{
	return e.Lagoon
}	

func (e environmentDef) GetProviderDescriptions() ProviderDescriptions{
	return e.providers
}	

func (e environmentDef) CountProviders() int{
	return len(e.Providers)
}	

func (e environmentDef) HasProviders() bool{
	return len(e.Providers) > 0
}	

func (e environmentDef) GetNodeDescriptions() NodeDescriptions{
	return e.nodes
}	

func (e environmentDef) CountNodes() int{
	return len(e.Nodes)
}	

func (e environmentDef) HasNodes() bool{
	return len(e.Nodes) > 0
}	

func (e environmentDef) GetStackDescriptions() StackDescriptions{
	return e.stacks
}	

func (e environmentDef) CountStacks() int{
	return len(e.Stacks)
}	

func (e environmentDef) HasStacks() bool{
	return len(e.Stacks) > 0
}	

func (e environmentDef) GetTaskDescriptions() TaskDescriptions{
	return e.tasks
}	

func (e environmentDef) CountTasks() int{
	return len(e.Tasks)
}	

func (e environmentDef) HasTasks() bool{
	return len(e.Tasks) > 0
}	




// ----------------------------------------------------
// Interface LagoonPlatform
// ----------------------------------------------------
type LagoonPlatform interface {
	
	
	GetVersion() string
	GetRegistry() string
	GetProxy() Proxy	
}
// ----------------------------------------------------
// Implementation of Interface "LagoonPlatform"
// ----------------------------------------------------
func (e platformDef) GetVersion() string{
	return e.Version
}	

func (e platformDef) GetRegistry() string{
	return e.Registry
}	

func (e platformDef) GetProxy() Proxy{
	return e
}	




// ----------------------------------------------------
// Interface Proxy
// ----------------------------------------------------
type Proxy interface {
	
	
	GetHttp() string
	GetHttps() string
	GetNoProxy() string	
}
// ----------------------------------------------------
// Implementation of Interface "Proxy"
// ----------------------------------------------------
func (e platformDef) GetHttp() string{
	return e.Proxy.Http
}	

func (e platformDef) GetHttps() string{
	return e.Proxy.Https
}	

func (e platformDef) GetNoProxy() string{
	return e.Proxy.NoProxy
}	




// ----------------------------------------------------
// Interface Labeled
// ----------------------------------------------------
type Labeled interface {
	
	
	GetLabels() Labels	
}
// ----------------------------------------------------
// Implementation of Interface "Labeled"
// ----------------------------------------------------
func (e providerDef) GetLabels() Labels{
	return CreateLabels(e.labelsDef.Labels...)
}	

func (e nodeSetDef) GetLabels() Labels{
	return CreateLabels(e.labelsDef.Labels...)
}	

func (e stackDef) GetLabels() Labels{
	return CreateLabels(e.labelsDef.Labels...)
}	

func (e taskDef) GetLabels() Labels{
	return CreateLabels(e.labelsDef.Labels...)
}	

func (e environmentDef) GetLabels() Labels{
	return CreateLabels(e.labelsDef.Labels...)
}	




// ----------------------------------------------------
// Interface Labels
// ----------------------------------------------------
type Labels interface {
	
	
	Contains(...string) bool
	AsStrings() []string	
}




// ----------------------------------------------------
// Interface Parameterized
// ----------------------------------------------------
type Parameterized interface {
	
	
	GetParameters() Parameters	
}
// ----------------------------------------------------
// Implementation of Interface "Parameterized"
// ----------------------------------------------------
func (e providerDef) GetParameters() Parameters{
	return CreateParameters(e.paramsDef.Params)
}	

func (e nodeSetDef) GetParameters() Parameters{
	return CreateParameters(e.Provider.paramsDef.Params)
}	




// ----------------------------------------------------
// Interface Parameters
// ----------------------------------------------------
type Parameters interface {
	
	
	AsMap() map[string]string	
}




// ----------------------------------------------------
// Interface NodeDescriptions
// ----------------------------------------------------
type NodeDescriptions interface {
	// Inherited interface(s)
	MappedContent
	
	GetNode(string) (NodeDescription, bool)
	GetNodesByLabel(string) ([]NodeDescription)	
}




// ----------------------------------------------------
// Interface NodeDescription
// ----------------------------------------------------
type NodeDescription interface {
	// Inherited interface(s)
	Labeled
	Named
	
	GetInstances() int
	GetNodeProvider() ProviderName
	GetProviderDescription() (ProviderDescription, bool)	
}
// ----------------------------------------------------
// Implementation of Interface "NodeDescription"
// ----------------------------------------------------
func (e nodeSetDef) GetInstances() int{
	return e.Instances
}	

func (e nodeSetDef) GetNodeProvider() ProviderName{
	return e
}	

func (e nodeSetDef) GetProviderDescription() (ProviderDescription, bool){
	return e.desc.providers.GetProvider(e.Provider.Name)
}	




// ----------------------------------------------------
// Interface ProviderDescriptions
// ----------------------------------------------------
type ProviderDescriptions interface {
	// Inherited interface(s)
	MappedContent
	
	GetProvider(string) (ProviderDescription, bool)	
}




// ----------------------------------------------------
// Interface ProviderDescription
// ----------------------------------------------------
type ProviderDescription interface {
	// Inherited interface(s)
	Labeled
	Parameterized
	Named
		
}




// ----------------------------------------------------
// Interface StackDescriptions
// ----------------------------------------------------
type StackDescriptions interface {
	// Inherited interface(s)
	MappedContent
	
	GetStack(string) (StackDescription, bool)	
}




// ----------------------------------------------------
// Interface StackDescription
// ----------------------------------------------------
type StackDescription interface {
	// Inherited interface(s)
	Labeled
	Named
	
	GetRepository() string
	GetVersion() string	
}
// ----------------------------------------------------
// Implementation of Interface "StackDescription"
// ----------------------------------------------------
func (e stackDef) GetRepository() string{
	return e.Repository
}	

func (e stackDef) GetVersion() string{
	return e.Version
}	




// ----------------------------------------------------
// Interface TaskDescriptions
// ----------------------------------------------------
type TaskDescriptions interface {
	// Inherited interface(s)
	MappedContent
	
	GetTask(string) (TaskDescription, bool)	
}




// ----------------------------------------------------
// Interface TaskDescription
// ----------------------------------------------------
type TaskDescription interface {
	// Inherited interface(s)
	Labeled
	Named
	
	GetPlaybook() string
	GetCron() string	
}
// ----------------------------------------------------
// Implementation of Interface "TaskDescription"
// ----------------------------------------------------
func (e taskDef) GetPlaybook() string{
	return e.Task
}	

func (e taskDef) GetCron() string{
	return e.Cron
}	




// ----------------------------------------------------
// Interface ProviderName
// ----------------------------------------------------
type ProviderName interface {
	// Inherited interface(s)
	Parameterized
	
	GetProviderName() string	
}
// ----------------------------------------------------
// Implementation of Interface "ProviderName"
// ----------------------------------------------------
func (e nodeSetDef) GetProviderName() string{
	return e.Provider.Name
}	




// ----------------------------------------------------
// Interface MappedContent
// ----------------------------------------------------
type MappedContent interface {
	
	
	Count() int
	Contains(...string) bool	
}
// ----------------------------------------------------
// Implementation of Interface "MappedContent"
// ----------------------------------------------------
func (e stacks) Count() int{
	return len(e.values)
}	

func (e tasks) Count() int{
	return len(e.values)
}	

func (e providers) Count() int{
	return len(e.values)
}	

func (e nodes) Count() int{
	return len(e.values)
}	

func (e stacks) Contains(p ...string) bool{
	return mapMultipleContains(e.values, p)
}	

func (e tasks) Contains(p ...string) bool{
	return mapMultipleContains(e.values, p)
}	

func (e providers) Contains(p ...string) bool{
	return mapMultipleContains(e.values, p)
}	

func (e nodes) Contains(p ...string) bool{
	return mapMultipleContains(e.values, p)
}	




// ----------------------------------------------------
// Interface Named
// ----------------------------------------------------
type Named interface {
	
	
	GetName() string	
}
// ----------------------------------------------------
// Implementation of Interface "Named"
// ----------------------------------------------------
func (e providerDef) GetName() string{
	return e.name
}	

func (e nodeSetDef) GetName() string{
	return e.name
}	

func (e stackDef) GetName() string{
	return e.name
}	

func (e taskDef) GetName() string{
	return e.name
}	




